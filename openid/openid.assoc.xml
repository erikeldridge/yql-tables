<?xml version="1.0" encoding="UTF-8"?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
    <meta>
        <author>Erik Eldridge</author>
        <description>
            - generate an openid association for caller to store
            - For more info see http://openid.net/specs/openid-authentication-2_0.html#associations
        </description>
        <sampleQuery>select * from {table} where uri="https://open.login.yahooapis.com/openid/op/auth"</sampleQuery>
    </meta>
    <bindings>
        <select produces="JSON">
            <inputs>

                <!-- uri must be a valid auth uri -->
                <key id="uri" type="xs:string" paramType="variable" required="true"/>

            </inputs>
            <execute><![CDATA[
                //use a wrapper fn so we can exit early, ie as a workaround for lack of exit(), die(), etc
                response.object = function () {
                        
                     var params = {
                             'openid.ns' : 'http://specs.openid.net/auth/2.0',
                             'openid.mode' : 'associate',
                             'openid.assoc_type' : 'HMAC-SHA1',
                             'openid.session_type' : 'no-encryption'
                         },
                         pairs = [];

                     for (var key in params) {
                         pairs.push(key + '=' + encodeURIComponent(params[key]));
                     }

                     y.include('http://github.com/kvz/phpjs/raw/master/functions/strings/trim.js');

                     var assocUri = uri + '?' + pairs.join('&'),
                         resp = y.rest(assocUri).get().response;
                         
                     if (!resp) {
                        return {
                            "error" : "no response"
                        };
                     }
                     
                     var arr = trim(resp).split('\n'),
                         assoc = {};
                         
                     for( var i in arr ){
                        var pair = arr[i].split(':');
                        assoc[pair[0]] = pair[1];
                     }
                     
                     return {
                         "success" : assoc
                     };

                 }();

            ]]></execute>
        </select>
    </bindings>
</table>